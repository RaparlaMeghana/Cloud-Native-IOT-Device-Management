{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kamal\\\\Downloads\\\\CloudNative_IoT_AnuragUniversity_Complete\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport About from './About';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, PieChart, Pie, Cell } from 'recharts';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst COLORS = ['#0088FE', '#00C49F'];\nfunction App() {\n  _s();\n  const [data, setData] = useState({\n    temperature: 0,\n    humidity: 0\n  });\n  const [history, setHistory] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await fetch('http://localhost:8000/device/latest');\n        if (!res.ok) throw new Error('Network response was not ok');\n        const json = await res.json();\n        setData(json);\n        setError(null);\n\n        // Keep last 10 readings in history for chart\n        setHistory(oldHistory => {\n          const newHistory = [...oldHistory, {\n            time: new Date().toLocaleTimeString(),\n            temperature: json.temperature,\n            humidity: json.humidity\n          }];\n          if (newHistory.length > 10) newHistory.shift(); // keep max 10\n          return newHistory;\n        });\n      } catch (err) {\n        setError('Failed to fetch data from backend');\n        console.error(err);\n      }\n    };\n    fetchData();\n    const interval = setInterval(fetchData, 5000);\n    return () => clearInterval(interval);\n  }, []);\n  const pieData = [{\n    name: 'Temperature',\n    value: data.temperature || 0\n  }, {\n    name: 'Humidity',\n    value: data.humidity || 0\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 30,\n        fontFamily: 'Arial',\n        maxWidth: 900,\n        margin: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Live IoT Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Temperature:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 16\n          }, this), \" \", data.temperature, \" \\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Humidity:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 16\n          }, this), \" \", data.humidity, \" %\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Recent Data Over Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n          width: 800,\n          height: 300,\n          data: history,\n          margin: {\n            top: 5,\n            right: 20,\n            left: 10,\n            bottom: 5\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            stroke: \"#ccc\",\n            strokeDasharray: \"5 5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"temperature\",\n            stroke: \"#0088FE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"humidity\",\n            stroke: \"#00C49F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Current Data Proportions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PieChart, {\n          width: 400,\n          height: 300,\n          children: [/*#__PURE__*/_jsxDEV(Pie, {\n            data: pieData,\n            cx: \"50%\",\n            cy: \"50%\",\n            outerRadius: 80,\n            fill: \"#8884d8\",\n            dataKey: \"value\",\n            label: true,\n            children: pieData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n              fill: COLORS[index % COLORS.length]\n            }, `cell-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"vX2RFpKPbYJ6wJzJ9agffyUNOH0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","About","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","PieChart","Pie","Cell","jsxDEV","_jsxDEV","Fragment","_Fragment","COLORS","App","_s","data","setData","temperature","humidity","history","setHistory","error","setError","fetchData","res","fetch","ok","Error","json","oldHistory","newHistory","time","Date","toLocaleTimeString","length","shift","err","console","interval","setInterval","clearInterval","pieData","name","value","children","fileName","_jsxFileName","lineNumber","columnNumber","style","padding","fontFamily","maxWidth","margin","color","width","height","top","right","left","bottom","stroke","strokeDasharray","dataKey","type","cx","cy","outerRadius","fill","label","map","entry","index","_c","$RefreshReg$"],"sources":["C:/Users/kamal/Downloads/CloudNative_IoT_AnuragUniversity_Complete/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport About from './About';\nimport {\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n  PieChart, Pie, Cell,\n} from 'recharts';\n\nconst COLORS = ['#0088FE', '#00C49F'];\n\nfunction App() {\n  const [data, setData] = useState({ temperature: 0, humidity: 0 });\n  const [history, setHistory] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await fetch('http://localhost:8000/device/latest');\n        if (!res.ok) throw new Error('Network response was not ok');\n        const json = await res.json();\n        setData(json);\n        setError(null);\n\n        // Keep last 10 readings in history for chart\n        setHistory((oldHistory) => {\n          const newHistory = [...oldHistory, { \n            time: new Date().toLocaleTimeString(), \n            temperature: json.temperature, \n            humidity: json.humidity \n          }];\n          if (newHistory.length > 10) newHistory.shift(); // keep max 10\n          return newHistory;\n        });\n\n      } catch (err) {\n        setError('Failed to fetch data from backend');\n        console.error(err);\n      }\n    };\n\n    fetchData();\n    const interval = setInterval(fetchData, 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const pieData = [\n    { name: 'Temperature', value: data.temperature || 0 },\n    { name: 'Humidity', value: data.humidity || 0 },\n  ];\n\n  return (\n    <>\n      <About />\n\n      <div style={{ padding: 30, fontFamily: 'Arial', maxWidth: 900, margin: 'auto' }}>\n        <h2>Live IoT Dashboard</h2>\n\n        {error ? (\n          <p style={{ color: 'red' }}>{error}</p>\n        ) : (\n          <>\n            <p><strong>Temperature:</strong> {data.temperature} °C</p>\n            <p><strong>Humidity:</strong> {data.humidity} %</p>\n\n            <h3>Recent Data Over Time</h3>\n            <LineChart\n              width={800}\n              height={300}\n              data={history}\n              margin={{ top: 5, right: 20, left: 10, bottom: 5 }}\n            >\n              <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n              <XAxis dataKey=\"time\" />\n              <YAxis />\n              <Tooltip />\n              <Legend />\n              <Line type=\"monotone\" dataKey=\"temperature\" stroke=\"#0088FE\" />\n              <Line type=\"monotone\" dataKey=\"humidity\" stroke=\"#00C49F\" />\n            </LineChart>\n\n            <h3>Current Data Proportions</h3>\n            <PieChart width={400} height={300}>\n              <Pie\n                data={pieData}\n                cx=\"50%\"\n                cy=\"50%\"\n                outerRadius={80}\n                fill=\"#8884d8\"\n                dataKey=\"value\"\n                label\n              >\n                {pieData.map((entry, index) => (\n                  <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                ))}\n              </Pie>\n              <Tooltip />\n              <Legend />\n            </PieChart>\n          </>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,SAAS;AAC3B,SACEC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,aAAa,EAAEC,OAAO,EAAEC,MAAM,EAC7DC,QAAQ,EAAEC,GAAG,EAAEC,IAAI,QACd,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElB,MAAMC,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,CAAC;AAErC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGpB,QAAQ,CAAC;IAAEqB,WAAW,EAAE,CAAC;IAAEC,QAAQ,EAAE;EAAE,CAAC,CAAC;EACjE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACyB,KAAK,EAAEC,QAAQ,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAM4B,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,qCAAqC,CAAC;QAC9D,IAAI,CAACD,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAC3D,MAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACI,IAAI,CAAC,CAAC;QAC7BZ,OAAO,CAACY,IAAI,CAAC;QACbN,QAAQ,CAAC,IAAI,CAAC;;QAEd;QACAF,UAAU,CAAES,UAAU,IAAK;UACzB,MAAMC,UAAU,GAAG,CAAC,GAAGD,UAAU,EAAE;YACjCE,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC;YACrChB,WAAW,EAAEW,IAAI,CAACX,WAAW;YAC7BC,QAAQ,EAAEU,IAAI,CAACV;UACjB,CAAC,CAAC;UACF,IAAIY,UAAU,CAACI,MAAM,GAAG,EAAE,EAAEJ,UAAU,CAACK,KAAK,CAAC,CAAC,CAAC,CAAC;UAChD,OAAOL,UAAU;QACnB,CAAC,CAAC;MAEJ,CAAC,CAAC,OAAOM,GAAG,EAAE;QACZd,QAAQ,CAAC,mCAAmC,CAAC;QAC7Ce,OAAO,CAAChB,KAAK,CAACe,GAAG,CAAC;MACpB;IACF,CAAC;IAEDb,SAAS,CAAC,CAAC;IACX,MAAMe,QAAQ,GAAGC,WAAW,CAAChB,SAAS,EAAE,IAAI,CAAC;IAC7C,OAAO,MAAMiB,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,OAAO,GAAG,CACd;IAAEC,IAAI,EAAE,aAAa;IAAEC,KAAK,EAAE5B,IAAI,CAACE,WAAW,IAAI;EAAE,CAAC,EACrD;IAAEyB,IAAI,EAAE,UAAU;IAAEC,KAAK,EAAE5B,IAAI,CAACG,QAAQ,IAAI;EAAE,CAAC,CAChD;EAED,oBACET,OAAA,CAAAE,SAAA;IAAAiC,QAAA,gBACEnC,OAAA,CAACZ,KAAK;MAAAgD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAETvC,OAAA;MAAKwC,KAAK,EAAE;QAAEC,OAAO,EAAE,EAAE;QAAEC,UAAU,EAAE,OAAO;QAAEC,QAAQ,EAAE,GAAG;QAAEC,MAAM,EAAE;MAAO,CAAE;MAAAT,QAAA,gBAC9EnC,OAAA;QAAAmC,QAAA,EAAI;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAE1B3B,KAAK,gBACJZ,OAAA;QAAGwC,KAAK,EAAE;UAAEK,KAAK,EAAE;QAAM,CAAE;QAAAV,QAAA,EAAEvB;MAAK;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,gBAEvCvC,OAAA,CAAAE,SAAA;QAAAiC,QAAA,gBACEnC,OAAA;UAAAmC,QAAA,gBAAGnC,OAAA;YAAAmC,QAAA,EAAQ;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACjC,IAAI,CAACE,WAAW,EAAC,QAAG;QAAA;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC1DvC,OAAA;UAAAmC,QAAA,gBAAGnC,OAAA;YAAAmC,QAAA,EAAQ;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACjC,IAAI,CAACG,QAAQ,EAAC,IAAE;QAAA;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAEnDvC,OAAA;UAAAmC,QAAA,EAAI;QAAqB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC9BvC,OAAA,CAACX,SAAS;UACRyD,KAAK,EAAE,GAAI;UACXC,MAAM,EAAE,GAAI;UACZzC,IAAI,EAAEI,OAAQ;UACdkC,MAAM,EAAE;YAAEI,GAAG,EAAE,CAAC;YAAEC,KAAK,EAAE,EAAE;YAAEC,IAAI,EAAE,EAAE;YAAEC,MAAM,EAAE;UAAE,CAAE;UAAAhB,QAAA,gBAEnDnC,OAAA,CAACP,aAAa;YAAC2D,MAAM,EAAC,MAAM;YAACC,eAAe,EAAC;UAAK;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACrDvC,OAAA,CAACT,KAAK;YAAC+D,OAAO,EAAC;UAAM;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACxBvC,OAAA,CAACR,KAAK;YAAA4C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACTvC,OAAA,CAACN,OAAO;YAAA0C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACXvC,OAAA,CAACL,MAAM;YAAAyC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACVvC,OAAA,CAACV,IAAI;YAACiE,IAAI,EAAC,UAAU;YAACD,OAAO,EAAC,aAAa;YAACF,MAAM,EAAC;UAAS;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC/DvC,OAAA,CAACV,IAAI;YAACiE,IAAI,EAAC,UAAU;YAACD,OAAO,EAAC,UAAU;YAACF,MAAM,EAAC;UAAS;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD,CAAC,eAEZvC,OAAA;UAAAmC,QAAA,EAAI;QAAwB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjCvC,OAAA,CAACJ,QAAQ;UAACkD,KAAK,EAAE,GAAI;UAACC,MAAM,EAAE,GAAI;UAAAZ,QAAA,gBAChCnC,OAAA,CAACH,GAAG;YACFS,IAAI,EAAE0B,OAAQ;YACdwB,EAAE,EAAC,KAAK;YACRC,EAAE,EAAC,KAAK;YACRC,WAAW,EAAE,EAAG;YAChBC,IAAI,EAAC,SAAS;YACdL,OAAO,EAAC,OAAO;YACfM,KAAK;YAAAzB,QAAA,EAEJH,OAAO,CAAC6B,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACxB/D,OAAA,CAACF,IAAI;cAAuB6D,IAAI,EAAExD,MAAM,CAAC4D,KAAK,GAAG5D,MAAM,CAACsB,MAAM;YAAE,GAArD,QAAQsC,KAAK,EAAE;cAAA3B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAwC,CACnE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACNvC,OAAA,CAACN,OAAO;YAAA0C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACXvC,OAAA,CAACL,MAAM;YAAAyC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAAA,eACX,CACH;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA,eACN,CAAC;AAEP;AAAClC,EAAA,CA9FQD,GAAG;AAAA4D,EAAA,GAAH5D,GAAG;AAgGZ,eAAeA,GAAG;AAAC,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}